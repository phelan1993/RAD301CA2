@model S00126107.Models.Movie

<div class="container" style="width: 98%">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>@Model.Title</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MovieId)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control floating-label" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control floating-label" } })
                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EnumDropDownListFor(model => model.Certificate, htmlAttributes: new { @class = "form-control floating-label" })
                    @Html.ValidationMessageFor(model => model.Certificate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control floating-label" } })
                    @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EnumDropDownListFor(model => model.Language, htmlAttributes: new { @class = "form-control floating-label" })
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { id="imageurl", @class = "form-control floating-label" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                    @*<button id="shorten">Shorten!</button>*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control floating-label" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
    <div style="float:right;padding: 15px">
        @*@Html.ActionLink("Edit", "Edit", new { id = Model.MovieId }) |*@
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //jQuery.urlShortener.settings.apiKey = 'AIzaSyA94LI8AMXwmPjhLGTeJKh8ZgUKGr8PYEQ';
        //$("#shorten").click(function () {
        //    //$("#shortUrlInfo").html("<img src='images/loading.gif'/>");
        //    var longUrlLink = $("#imageurl").val();
        //    jQuery.urlShortener({
        //        longUrl: longUrlLink,
        //        success: function (shortUrl) {
        //            $("#imageurl").html(shortUrl);
        //        },
        //        error: function (err) {
        //            $("#shortUrlInfo").html(JSON.stringify(err));
        //        }
        //    });

        //});

        $(function () { // will trigger when the document is ready
            $('.datepicker').datepicker(); //Initialise any date pickers
        });
    </script>

}
